{"ast":null,"code":"// const clientId = '94eef475b40b4db5bb9ad65266f49b34';\n// const redirectUri = '';\n// const spotifyUrl = `https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public&client_id=${clientId}&redirect_uri=${redirectUri}`;\n// let accessToken = undefined;\n// let expiresIn = undefined;\n// const Spotify = {\n//   getAccessToken() {\n//     if (accessToken) {\n//       return accessToken;\n//     }\n//     const urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\n//     const urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n//     if (urlAccessToken && urlExpiresIn) {\n//       accessToken = urlAccessToken[1];\n//       expiresIn = urlExpiresIn[1];\n//       window.setTimeout(() => accessToken = '', expiresIn * 1000);\n//       window.history.pushState('Access Token', null, '/');\n//     } else {\n//       window.location = spotifyUrl;\n//     }\n//   },\n//   search(term) {\n//     const searchUrl = `https://api.spotify.com/v1/search?type=track&q=${term.replace(' ', '%20')}`;\n//     return fetch(searchUrl, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`\n//         }\n//       })\n//       .then(response => response.json())\n//       .then(jsonResponse => {\n//         if (!jsonResponse.tracks) return [];\n//         return jsonResponse.tracks.items.map(track => {\n//           return {\n//             id: track.id,\n//             name: track.name,\n//             artist: track.artists[0].name,\n//             album: track.album.name,\n//             uri: track.uri\n//           }\n//         })\n//       });\n//   },\n//   savePlaylist(name, trackUris) {\n//     if (!name || !trackUris || trackUris.length === 0) return;\n//     const userUrl = 'https://api.spotify.com/v1/me';\n//     const headers = {\n//       Authorization: `Bearer ${accessToken}`\n//     };\n//     let userId = undefined;\n//     let playlistId = undefined;\n//     fetch(userUrl, {\n//       headers: headers \n//     })\n//     .then(response => response.json())\n//     .then(jsonResponse => userId = jsonResponse.id)\n//     .then(() => {\n//       const createPlaylistUrl = `https://api.spotify.com/v1/users/${userId}/playlists`;\n//       fetch(createPlaylistUrl, {\n//           method: 'POST',\n//           headers: headers,\n//           body: JSON.stringify({\n//             name: name\n//           })\n//         })\n//         .then(response => response.json())\n//         .then(jsonResponse => playlistId = jsonResponse.id)\n//         .then(() => {\n//           const addPlaylistTracksUrl = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n//           fetch(addPlaylistTracksUrl, {\n//             method: 'POST',\n//             headers: headers,\n//             body: JSON.stringify({\n//               uris: trackUris\n//             })\n//           });\n//         })\n//     })\n//   }\n// };\nexport default Spotify;","map":{"version":3,"sources":["D:/Desktop - Data Drive/AnimalProject/codeacademy-jamming-react/jamming/src/util/Spotify.js"],"names":["Spotify"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAeA,OAAf","sourcesContent":["// const clientId = '94eef475b40b4db5bb9ad65266f49b34';\r\n// const redirectUri = '';\r\n// const spotifyUrl = `https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public&client_id=${clientId}&redirect_uri=${redirectUri}`;\r\n// let accessToken = undefined;\r\n// let expiresIn = undefined;\r\n\r\n// const Spotify = {\r\n//   getAccessToken() {\r\n//     if (accessToken) {\r\n//       return accessToken;\r\n//     }\r\n//     const urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\r\n//     const urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\r\n//     if (urlAccessToken && urlExpiresIn) {\r\n//       accessToken = urlAccessToken[1];\r\n//       expiresIn = urlExpiresIn[1];\r\n//       window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n//       window.history.pushState('Access Token', null, '/');\r\n//     } else {\r\n//       window.location = spotifyUrl;\r\n//     }\r\n//   },\r\n\r\n//   search(term) {\r\n//     const searchUrl = `https://api.spotify.com/v1/search?type=track&q=${term.replace(' ', '%20')}`;\r\n//     return fetch(searchUrl, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${accessToken}`\r\n//         }\r\n//       })\r\n//       .then(response => response.json())\r\n//       .then(jsonResponse => {\r\n//         if (!jsonResponse.tracks) return [];\r\n//         return jsonResponse.tracks.items.map(track => {\r\n//           return {\r\n//             id: track.id,\r\n//             name: track.name,\r\n//             artist: track.artists[0].name,\r\n//             album: track.album.name,\r\n//             uri: track.uri\r\n//           }\r\n//         })\r\n//       });\r\n//   },\r\n\r\n//   savePlaylist(name, trackUris) {\r\n//     if (!name || !trackUris || trackUris.length === 0) return;\r\n//     const userUrl = 'https://api.spotify.com/v1/me';\r\n//     const headers = {\r\n//       Authorization: `Bearer ${accessToken}`\r\n//     };\r\n//     let userId = undefined;\r\n//     let playlistId = undefined;\r\n//     fetch(userUrl, {\r\n//       headers: headers \r\n//     })\r\n//     .then(response => response.json())\r\n//     .then(jsonResponse => userId = jsonResponse.id)\r\n//     .then(() => {\r\n//       const createPlaylistUrl = `https://api.spotify.com/v1/users/${userId}/playlists`;\r\n//       fetch(createPlaylistUrl, {\r\n//           method: 'POST',\r\n//           headers: headers,\r\n//           body: JSON.stringify({\r\n//             name: name\r\n//           })\r\n//         })\r\n//         .then(response => response.json())\r\n//         .then(jsonResponse => playlistId = jsonResponse.id)\r\n//         .then(() => {\r\n//           const addPlaylistTracksUrl = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\r\n//           fetch(addPlaylistTracksUrl, {\r\n//             method: 'POST',\r\n//             headers: headers,\r\n//             body: JSON.stringify({\r\n//               uris: trackUris\r\n//             })\r\n//           });\r\n//         })\r\n//     })\r\n//   }\r\n// };\r\n\r\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}